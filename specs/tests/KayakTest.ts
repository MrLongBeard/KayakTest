// import {KayakPOM} from '../pages/KayakPOM'

import { browser, element, by } from "protractor"
import { BrowserStack } from "protractor/built/driverProviders"

const KayakPOM = require('../pages/KayakPOM')
describe('Kayak Flight Test', function(){
    beforeEach(function(){
        browser.get('https://www.kayak.com')
        browser.driver.manage().window().maximize();
        KayakPOM.setFlightTab()
        KayakPOM.clickFlightTab()
    })
    it('Test Origin Exist', function(){
        KayakPOM.setOrigin()
        KayakPOM.isOriginDisplayed()
    })
    it('Test Destination Exist', function(){
        KayakPOM.setDestination()
        KayakPOM.isDestinationDisplayed()
    })
    it('Test Departure Field Exist',function(){
        KayakPOM.setDepartureDate()
        KayakPOM.isDepartureDateDisplayed()
    })
    it('Test Return Field Exist',function(){
        KayakPOM.setReturnDate()
        KayakPOM.isReturnDateDisplayed()
    })
    it('Trip Type Test', async function(){
        KayakPOM.setTripType()
        let result = await KayakPOM.getTripTypeDataAttribute()
        expect(result).toBe('roundtrip')    
    })
    it('Set Trip Type Oneway Test',async function(){
        KayakPOM.setTripType()
        KayakPOM.tripType.click()
        KayakPOM.setOneway()
        KayakPOM.clickOneway()
        let result = await KayakPOM.getTripTypeDataAttribute()
        expect(result).toBe('oneway')
    })
    it('Set Trip Type Multi-City Test', async function(){
        KayakPOM.setTripType()
        KayakPOM.clickTripType()
        KayakPOM.setMultiCity()
        KayakPOM.clickMultiCity()
        let result = await KayakPOM.getTripTypeDataAttribute()
        expect(result).toBe('multicity')
    })
    it('Set Trip Type Round Trip Test', async function(){
        KayakPOM.setTripType()
        KayakPOM.clickTripType() 
        KayakPOM.setRoundTrip()
        KayakPOM.clickRoundTrip()   
        let result = await KayakPOM.getTripTypeDataAttribute()
        expect(result).toBe('roundtrip')
    })
    it("Adult Count Test", async function(){
        KayakPOM.setTravelerInfo()
        KayakPOM.clickTravelerInfo()
        KayakPOM.setAdultCountIncreaseBtn()
        KayakPOM.clickAdultCountIncreaseBtn()
        KayakPOM.clickAdultCountIncreaseBtn()
        KayakPOM.clickAdultCountIncreaseBtn()
        KayakPOM.clickAdultCountIncreaseBtn()
        KayakPOM.clickAdultCountIncreaseBtn()
        KayakPOM.clickAdultCountIncreaseBtn()
        KayakPOM.clickAdultCountIncreaseBtn()
        KayakPOM.clickAdultCountIncreaseBtn()
        KayakPOM.clickAdultCountIncreaseBtn()
        KayakPOM.setAdultCountError()
        let result = await KayakPOM.getAdultCountError()
        expect(result).toBe('Searches cannot have more than 9 adults')
        browser.sleep(3000)
    })
    it('Origin Test PAR', async function(){
        browser.sleep(1000)
        KayakPOM.setOriginCancelBtn()
        KayakPOM.clickOriginCancelBtn()
        browser.sleep(1000)
        KayakPOM.setOriginAirport()
        KayakPOM.sendOriginText('PAR')
        browser.sleep(1000)
        KayakPOM.setOriginOpt()
        KayakPOM.clickOriginOpt()
        browser.sleep(1000)
        KayakPOM.setOrigin()
        let result = await KayakPOM.getOriginValue()
        expect(result).toBe('PAR')
    })
    it('Origin Test NYC', async function(){
        browser.sleep(1000)
        KayakPOM.setOriginCancelBtn()
        KayakPOM.clickOriginCancelBtn()
        browser.sleep(1000)
        KayakPOM.setOriginAirport()
        KayakPOM.sendOriginText('NYC')
        browser.sleep(1000)
        KayakPOM.setOriginOpt()
        KayakPOM.clickOriginOpt()
        browser.sleep(1000)
        KayakPOM.setOrigin()
        let result = await KayakPOM.getOriginValue()
        expect(result).toBe('NYC')
    })
    it('Travel Label Test', async function(){
        KayakPOM.setTravelerInfo()
        KayakPOM.clickTravelerInfo()
        KayakPOM.setAdultCountIncreaseBtn()
        KayakPOM.clickAdultCountIncreaseBtn()
        KayakPOM.clickAdultCountIncreaseBtn()
        KayakPOM.clickAdultCountIncreaseBtn()
        browser.sleep(1000)
        KayakPOM.setTravelLabel()
        let result = await KayakPOM.getTravelLabelValue()
        expect(result).toBe('4 Travelers')
    })
    //Step 9
    it('Travel Label Test', async function(){
        KayakPOM.setTravelerInfo()
        KayakPOM.clickTravelerInfo()
        KayakPOM.setAdultCountIncreaseBtn()
        KayakPOM.clickAdultCountIncreaseBtn()
        KayakPOM.clickAdultCountIncreaseBtn()
        KayakPOM.clickAdultCountIncreaseBtn()
        KayakPOM.setChildIncreaseBtn()
        KayakPOM.clickChildIcreaseBtn()
        KayakPOM.clickChildIcreaseBtn()
        browser.sleep(1000)
        KayakPOM.setTravelLabel()
        let result = await KayakPOM.getTravelLabelValue()
        expect(result).toBe('6 Travelers')
    })
})